{"version":3,"file":"index.umd.js","sources":["../src/form.js","../src/regex-lookup.js","../src/validation.js"],"sourcesContent":["/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport React from 'react'; // eslint-disable-line no-unused-vars\nimport {Form, Field, useField} from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport {FieldArray} from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\nimport {\n  Label,\n  Textarea,\n  Input,\n  Checkbox,\n  Button,\n  Radio,\n  Select,\n  Grid,\n  Box,\n  Styled,\n  Text,\n  jsx\n} from 'theme-ui';\n\nconst Error = ({name}) => {\n  const {\n    meta: {touched, error}\n  } = useField(name, {subscription: {touched: true, error: true}});\n  return touched && error ? (\n    <Text variant=\"warning\" mb={2}>\n      {error}\n    </Text>\n  ) : null;\n};\n\nError.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst handleReset = (event, form) => {\n  event.preventDefault();\n  form.reset();\n};\n\nconst NestedForm = ({childFields, form, childLabel, name, fields, index}) => {\n  return (\n    <div key={name} sx={{gridColumn: '1/3'}}>\n      <fieldset sx={{display: 'contents'}}>\n        {childLabel && (\n          <Styled.h4>\n            {childLabel} {index + 1}\n          </Styled.h4>\n        )}\n        {childFields.map((field) => {\n          return getFormField(field, form, name);\n        })}\n        <Button type=\"button\" onClick={() => fields.remove(index)}>\n          Remove\n        </Button>\n      </fieldset>\n    </div>\n  );\n};\n\nNestedForm.propTypes = {\n  childFields: PropTypes.array.isRequired,\n  form: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  childLabel: PropTypes.string,\n  fields: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nconst getFormField = (field, form, blockText, name = '') => {\n  const {push, pop} = form.mutators;\n  const width = field.styling && field.styling.fullWidth ? '1/3' : null;\n  // This is a hack while Sanity doesn't enable initial values on array-level items\n  if (field.childFields) field.input = 'field-array';\n\n  switch (field.input) {\n    case 'textarea':\n      return (\n        <Field\n          key={field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: '1/3'}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Textarea id={field.id} {...input} {...otherProps} rows=\"8\" />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'field-array':\n      return (\n        <Box sx={{gridColumn: '1/3'}}>\n          {field.label && <Styled.h2>{field.label}</Styled.h2>}\n          {field.description && blockText ? (\n            blockText(field.description)\n          ) : (\n            <Styled.p>{field.description}</Styled.p>\n          )}\n          <Grid gap={20} columns={['1fr 1fr']}>\n            <div sx={{display: 'flex', justifyContent: 'space-evenly'}}>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => push(name + field.id, undefined)}\n              >\n                Add\n              </Button>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => pop(name + field.id, undefined)}\n              >\n                Remove\n              </Button>\n            </div>\n            <FieldArray name={name + field.id}>\n              {({fields}) =>\n                fields.map((name, index) => (\n                  <NestedForm\n                    key={name + field.id}\n                    childLabel={field.childLabel}\n                    name={name}\n                    form={form}\n                    fields={fields}\n                    index={index}\n                    childFields={field.childFields}\n                  />\n                ))\n              }\n            </FieldArray>\n          </Grid>\n        </Box>\n      );\n    case 'select':\n      return (\n        <Field key={field.id} name={name + field.id}>\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Select id={field.id} {...input} {...otherProps}>\n                {field.values.map((value) => (\n                  <option key={field.id + value} value={value}>\n                    {value}\n                  </option>\n                ))}\n              </Select>\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'radio':\n      return (\n        <fieldset key={field.id} sx={{gridColumn: width}}>\n          <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n          {field.values.map((value) => (\n            <div key={field.id + value}>\n              <label\n                key={value}\n                sx={{\n                  boxSizing: 'border-box',\n                  minWidth: '0px',\n                  width: '100%',\n                  display: 'flex',\n                  margin: '0px'\n                }}\n              >\n                <Field name={name + field.id} type=\"radio\" value={value}>\n                  {({input, ...otherProps}) => (\n                    <Radio {...input} {...otherProps} />\n                  )}\n                </Field>\n                {value}\n              </label>\n            </div>\n          ))}\n        </fieldset>\n      );\n    case 'checkbox':\n      return (\n        <React.Fragment>\n          {field.label && field.values && field.values.length > 0 ? (\n            <fieldset key={field.id} sx={{gridColumn: width}}>\n              <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n              {field.values.map((value) => (\n                <div key={field.id + value}>\n                  <label\n                    key={value}\n                    sx={{\n                      boxSizing: 'border-box',\n                      minWidth: '0px',\n                      width: '100%',\n                      display: 'flex',\n                      margin: '0px'\n                    }}\n                  >\n                    <Field name={name + field.id} value={value}>\n                      {({input, ...otherProps}) => (\n                        <Checkbox {...input} {...otherProps} />\n                      )}\n                    </Field>\n                    {value}\n                  </label>\n                </div>\n              ))}\n            </fieldset>\n          ) : (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label sx={{display: 'inline-block'}}>\n                <Field key={field.id} name={name + field.id}>\n                  {({input, ...otherProps}) => (\n                    <Checkbox {...input} {...otherProps} />\n                  )}\n                </Field>\n                {field.label}\n                <Error name={name + field.id} />\n              </Label>\n            </div>\n          )}\n        </React.Fragment>\n      );\n    case 'reset':\n      return (\n        <Button\n          sx={{gridColumn: width}}\n          type={field.input}\n          id={field.id}\n          onClick={(event) => handleReset(event, form)}\n        >\n          {field.label}\n        </Button>\n      );\n    default:\n      return (\n        <Field\n          key={name + field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id} required={field.required}>\n                {field.label}\n                {field.required && <strong>*</strong>}\n              </Label>\n              <Input\n                type={field.input}\n                id={field.id}\n                {...input}\n                {...otherProps}\n              />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n  }\n};\n\nconst FormComponent = ({\n  title,\n  id,\n  description,\n  fields,\n  blockText,\n  submitForm,\n  validationFn,\n  success\n}) => {\n  const defaultTextHandler = (content) => {\n    return <Styled.p>{content}</Styled.p>;\n  };\n\n  const block = blockText || defaultTextHandler;\n\n  return (\n    <Form\n      mutators={{\n        ...arrayMutators\n      }}\n      render={({handleSubmit, form, submitting, pristine, submitSucceeded}) => {\n        return submitSucceeded ? (\n          success ? (\n            success\n          ) : (\n            <Box as=\"form\" id={id}>\n              <fieldset>\n                <Styled.p>\n                  Thankyou for your submission. We will get back to you as soon\n                  as we can.\n                </Styled.p>\n              </fieldset>\n            </Box>\n          )\n        ) : (\n          <Box as=\"form\" id={id} onSubmit={handleSubmit}>\n            <fieldset>\n              {title && <Styled.h2>{title}</Styled.h2>}\n              {description && block(description)}\n              <Grid gap={20} columns={['1fr 1fr']}>\n                {fields.map((field) => {\n                  return getFormField(field, form, block);\n                })}\n                <Button\n                  sx={{gridColumn: '1/3'}}\n                  type=\"submit\"\n                  disabled={submitting || pristine}\n                >\n                  Submit\n                </Button>\n              </Grid>\n            </fieldset>\n          </Box>\n        );\n      }}\n      validate={validationFn}\n      initialValues={fields.reduce((object, field) => {\n        if (field.initialValue) object[field.id] = field.initialValue;\n        return object;\n      }, {})}\n      onSubmit={submitForm}\n    />\n  );\n};\n\nFormComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n  blockText: PropTypes.func,\n  submitForm: PropTypes.func.isRequired,\n  validationFn: PropTypes.func,\n  success: PropTypes.node\n};\n\nexport default FormComponent;\nexport {getFormField};\n","export default {\n  text: null,\n  email: /([\\w_.\\-+])+@([\\w-]+\\.)+([\\w]{2,10})+$/i,\n  telephone: /^[+]*[(]{0,1}[0-9]{2,}[)]{0,1}[0-9]{6,}$/i,\n  date: /^(0?[1-9]|1[0-2])[/](0?[1-9]|[12]d|3[01])[/](14|21)d{2}$/i,\n  textarea: null,\n  select: null,\n  checkbox: null,\n  radio: null,\n  url: /[(http(s)?)://(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/i,\n  file: null,\n  number: /^-?\\d*\\.?\\d+$/i\n};\n","import regexLookup from './regex-lookup';\n\nconst validation = (values, data, regexs) => {\n  // If a new Regex object is supplied, use that, otherwise, use the library default\n  const regexDict = regexs || regexLookup;\n\n  // If an error message is supplied, use that, otherwise, use the library default\n  const errorMessage = data.requiredError || 'Required';\n\n  // Define errors object\n  const errors = {};\n\n  // Begin testing each field for errors\n  data.fields.forEach(field => {\n    /* ***** */\n    /* Setup */\n    /* ***** */\n\n    // If supplied regex, put it into variable - otherwise false\n    const rg = field?.validation?.regexString;\n\n    // Test the supplied regex, return if regex, or make regex, or return false\n    const suppliedRegex =\n      rg instanceof RegExp\n        ? rg\n        : rg && new RegExp(rg) instanceof RegExp // If rg && not included, this would evaluate true\n        ? new RegExp(rg)\n        : false;\n\n    // If supplied validation type, put it into variable - otherwise false\n    const vtype = field?.validation?.validationType ?? false;\n\n    // Set the regex based on vtype and suppliedRegex value\n    const regex =\n      vtype === 'custom'\n        ? suppliedRegex\n        : vtype === 'default'\n        ? regexDict[field.input]\n        : false;\n\n    /* ***** */\n    /* Tests */\n    /* ***** */\n\n    // Test for value against required, if met, test against regex (if applicable)\n    if (field.required) {\n      if (!values[field.id]) {\n        errors[field.id] = errorMessage;\n      } else if (regex && !regex.test(values[field.id])) {\n        errors[field.id] = field.validation.warning;\n      }\n    }\n\n    // Given value not required, if value, test against regex (if valid regex)\n    if (!field.required) {\n      if (regex && values[field.id] && !regex.test(values[field.id])) {\n        console.log('inside');\n        errors[field.id] = field.validation.warning;\n      }\n    }\n  });\n\n  // Returns error object as result of validation to react-final-form\n  return errors;\n};\n\nexport default validation;\n"],"names":["Error","name","useField","subscription","touched","error","meta","jsx","Text","propTypes","PropTypes","string","isRequired","handleReset","event","form","preventDefault","reset","NestedForm","childFields","childLabel","fields","index","gridColumn","display","Styled","map","field","getFormField","Button","remove","array","any","number","blockText","mutators","push","pop","width","styling","fullWidth","input","Field","id","placeholder","otherProps","label","Label","Textarea","Box","description","Grid","justifyContent","undefined","FieldArray","Select","values","value","boxSizing","minWidth","margin","Radio","length","Checkbox","required","Input","FormComponent","title","submitForm","validationFn","success","defaultTextHandler","content","block","Form","arrayMutators","handleSubmit","submitting","pristine","submitSucceeded","reduce","object","initialValue","func","node","text","email","telephone","date","textarea","select","checkbox","radio","url","file","validation","data","regexs","regexDict","regexLookup","errorMessage","requiredError","errors","forEach","rg","regexString","suppliedRegex","RegExp","vtype","validationType","regex","test","warning","console","log"],"mappings":"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"}