{"version":3,"file":"index.modern.js","sources":["../src/form.js","../src/regex-lookup.js","../src/validation.js","../schemas/form.js","../schemas/formfield.js","../schemas/formarrayfield.js"],"sourcesContent":["/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport React from 'react'; // eslint-disable-line no-unused-vars\nimport {Form, Field, useField} from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport {FieldArray} from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\nimport {\n  Label,\n  Textarea,\n  Input,\n  Checkbox,\n  Button,\n  Radio,\n  Select,\n  Grid,\n  Box,\n  Styled,\n  Text,\n  jsx\n} from 'theme-ui';\n\nconst Error = ({name}) => {\n  const {\n    meta: {touched, error}\n  } = useField(name, {subscription: {touched: true, error: true}});\n  return touched && error ? (\n    <Text variant=\"warning\" mb={2}>\n      {error}\n    </Text>\n  ) : null;\n};\n\nError.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst handleReset = (e, form) => {\n  e.preventDefault();\n  form.reset();\n};\n\nconst NestedForm = ({childFields, form, childLabel, name, fields, index}) => {\n  return (\n    <div key={name} sx={{gridColumn: '1/3'}}>\n      <fieldset sx={{display: 'contents'}}>\n        {childLabel && (\n          <Styled.h4>\n            {childLabel} {index + 1}\n          </Styled.h4>\n        )}\n        {childFields.map(field => {\n          return getFormField(field, form, name);\n        })}\n        <Button type=\"button\" onClick={() => fields.remove(index)}>\n          Remove\n        </Button>\n      </fieldset>\n    </div>\n  );\n};\n\nNestedForm.propTypes = {\n  childFields: PropTypes.array.isRequired,\n  form: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  childLabel: PropTypes.string,\n  fields: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nconst getFormField = (field, form, blockText, name = '') => {\n  const {push, pop} = form.mutators;\n  const width = field.styling && field.styling.fullWidth ? '1/3' : null;\n  // This is a hack while Sanity doesn't enable initial values on array-level items\n  if (field.childFields) field.input = 'field-array';\n\n  switch (field.input) {\n    case 'textarea':\n      return (\n        <Field\n          key={field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: '1/3'}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Textarea id={field.id} {...input} {...otherProps} rows=\"8\" />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'field-array':\n      return (\n        <Box sx={{gridColumn: '1/3'}}>\n          {field.label && <Styled.h2>{field.label}</Styled.h2>}\n          {field.description && blockText ? (\n            blockText(field.description)\n          ) : (\n            <Styled.p>{field.description}</Styled.p>\n          )}\n          <Grid gap={20} columns={['1fr 1fr']}>\n            <div sx={{display: 'flex', justifyContent: 'space-evenly'}}>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => push(name + field.id, undefined)}\n              >\n                Add\n              </Button>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => pop(name + field.id, undefined)}\n              >\n                Remove\n              </Button>\n            </div>\n            <FieldArray name={name + field.id}>\n              {({fields}) =>\n                fields.map((name, index) => (\n                  <NestedForm\n                    key={name + field.id}\n                    childLabel={field.childLabel}\n                    name={name}\n                    form={form}\n                    fields={fields}\n                    index={index}\n                    childFields={field.childFields}\n                  />\n                ))\n              }\n            </FieldArray>\n          </Grid>\n        </Box>\n      );\n    case 'select':\n      return (\n        <Field key={field.id} name={name + field.id}>\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Select id={field.id} {...input} {...otherProps}>\n                {field.values.map(value => (\n                  <option key={field.id + value} value={value}>\n                    {value}\n                  </option>\n                ))}\n              </Select>\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'radio':\n      return (\n        <fieldset key={field.id} sx={{gridColumn: width}}>\n          <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n          {field.values.map(value => (\n            <div key={field.id + value}>\n              <label\n                key={value}\n                sx={{\n                  boxSizing: 'border-box',\n                  minWidth: '0px',\n                  width: '100%',\n                  display: 'flex',\n                  margin: '0px'\n                }}\n              >\n                <Field name={name + field.id} type=\"radio\" value={value}>\n                  {({input, ...otherProps}) => (\n                    <Radio {...input} {...otherProps} />\n                  )}\n                </Field>\n                {value}\n              </label>\n            </div>\n          ))}\n        </fieldset>\n      );\n    case 'checkbox':\n      return (\n        <>\n          {field.label && field.values && field.values.length > 0 ? (\n            <fieldset key={field.id} sx={{gridColumn: width}}>\n              <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n              {field.values.map(value => (\n                <div key={field.id + value}>\n                  <label\n                    key={value}\n                    sx={{\n                      boxSizing: 'border-box',\n                      minWidth: '0px',\n                      width: '100%',\n                      display: 'flex',\n                      margin: '0px'\n                    }}\n                  >\n                    <Field name={name + field.id} value={value}>\n                      {({input, ...otherProps}) => (\n                        <Checkbox {...input} {...otherProps} />\n                      )}\n                    </Field>\n                    {value}\n                  </label>\n                </div>\n              ))}\n            </fieldset>\n          ) : (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label sx={{display: 'inline-block'}}>\n                <Field key={field.id} name={name + field.id}>\n                  {({input, ...otherProps}) => (\n                    <Checkbox {...input} {...otherProps} />\n                  )}\n                </Field>\n                {field.label}\n                <Error name={name + field.id} />\n              </Label>\n            </div>\n          )}\n        </>\n      );\n    case 'reset':\n      return (\n        <Button\n          sx={{gridColumn: width}}\n          type={field.input}\n          id={field.id}\n          onClick={e => handleReset(e, form)}\n        >\n          {field.label}\n        </Button>\n      );\n    default:\n      return (\n        <Field\n          key={name + field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id} required={field.required}>\n                {field.label}\n                {field.required && <strong>*</strong>}\n              </Label>\n              <Input\n                type={field.input}\n                id={field.id}\n                {...input}\n                {...otherProps}\n              />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n  }\n};\n\nconst FormComponent = ({\n  title,\n  id,\n  description,\n  fields,\n  blockText,\n  submitForm,\n  validationFn\n}) => {\n  return (\n    <Form\n      mutators={{\n        ...arrayMutators\n      }}\n      render={({handleSubmit, form, submitting, pristine}) => {\n        return (\n          <Box as=\"form\" id={id} onSubmit={handleSubmit}>\n            <fieldset>\n              {title && <Styled.h2>{title}</Styled.h2>}\n              {description && blockText ? (\n                blockText(description)\n              ) : (\n                <Styled.p>{description}</Styled.p>\n              )}\n              <Grid gap={20} columns={['1fr 1fr']}>\n                {fields.map(field => {\n                  return getFormField(field, form, blockText);\n                })}\n                <Button\n                  sx={{gridColumn: '1/3'}}\n                  type=\"submit\"\n                  disabled={submitting || pristine}\n                >\n                  Submit\n                </Button>\n              </Grid>\n            </fieldset>\n          </Box>\n        );\n      }}\n      validate={validationFn}\n      initialValues={fields.reduce((obj, field) => {\n        if (field.initialValue) obj[field.id] = field.initialValue;\n        return obj;\n      }, {})}\n      onSubmit={submitForm}\n    />\n  );\n};\n\nFormComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n  blockText: PropTypes.func,\n  submitForm: PropTypes.func.isRequired,\n  validationFn: PropTypes.func\n};\n\nexport default FormComponent;\nexport {getFormField};\n","export default {\n  text: null,\n  email: /([\\w_.\\-+])+@([\\w-]+\\.)+([\\w]{2,10})+$/i,\n  telephone: /^[+]*[(]{0,1}[0-9]{2,}[)]{0,1}[0-9]{6,}$/i,\n  date: /^(0?[1-9]|1[0-2])[/](0?[1-9]|[12]d|3[01])[/](14|21)d{2}$/i,\n  textarea: null,\n  select: null,\n  checkbox: null,\n  radio: null,\n  url: /[(http(s)?)://(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/i,\n  file: null,\n  number: /^-?\\d*\\.?\\d+$/i\n};\n","import regexLookup from './regex-lookup';\n\nconst validation = (values, data, regexs) => {\n  // If a new Regex object is supplied, use that, otherwise, use the library default\n  const regexDict = regexs || regexLookup;\n\n  // If an error message is supplied, use that, otherwise, use the library default\n  const errorMessage = data.requiredError || 'Required';\n\n  // Define errors object\n  const errors = {};\n\n  // Begin testing each field for errors\n  data.fields.forEach(field => {\n    /* ***** */\n    /* Setup */\n    /* ***** */\n\n    // If supplied regex, put it into variable - otherwise false\n    const rg = field?.validation?.regexString;\n\n    // Test the supplied regex, return if regex, or make regex, or return false\n    const suppliedRegex =\n      rg instanceof RegExp\n        ? rg\n        : rg && new RegExp(rg) instanceof RegExp // If rg && not included, this would evaluate true\n        ? new RegExp(rg)\n        : false;\n\n    // If supplied validation type, put it into variable - otherwise false\n    const vtype = field?.validation?.validationType ?? false;\n\n    // Set the regex based on vtype and suppliedRegex value\n    const regex =\n      vtype === 'custom'\n        ? suppliedRegex\n        : vtype === 'default'\n        ? regexDict[field.input]\n        : false;\n\n    /* ***** */\n    /* Tests */\n    /* ***** */\n\n    // Test for value against required, if met, test against regex (if applicable)\n    if (field.required) {\n      if (!values[field.id]) {\n        errors[field.id] = errorMessage;\n      } else if (regex && !regex.test(values[field.id])) {\n        errors[field.id] = field.validation.warning;\n      }\n    }\n\n    // Given value not required, if value, test against regex (if valid regex)\n    if (!field.required) {\n      if (regex && values[field.id] && !regex.test(values[field.id])) {\n        console.log('inside');\n        errors[field.id] = field.validation.warning;\n      }\n    }\n  });\n\n  // Returns error object as result of validation to react-final-form\n  return errors;\n};\n\nexport default validation;\n","export default {\n  name: 'form',\n  title: 'Form',\n  type: 'document',\n  fields: [\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string'\n    },\n    {\n      name: 'id',\n      title: 'ID',\n      type: 'string'\n    },\n    {\n      name: 'description',\n      title: 'Form description',\n      type: 'blockContent'\n    },\n    {\n      name: 'fields',\n      title: 'fields',\n      type: 'array',\n      of: [\n        {\n          type: 'formfield',\n          title: 'Field'\n        },\n        {\n          type: 'formarrayfield',\n          title: 'Form Array'\n        }\n      ]\n    },\n    {\n      name: 'requiredError',\n      title: 'Required Error text',\n      type: 'string',\n      description:\n        \"This is the error message that will show up if a required field is left blank. If not set, the default is to output 'required'\"\n    }\n  ]\n};\n","export default {\n  name: 'formfield',\n  title: 'Field',\n  type: 'document',\n  fields: [\n    {\n      name: 'label',\n      title: 'Label',\n      type: 'string',\n      description:\n        'The label which will accompany this form input on the screen'\n    },\n    {\n      name: 'id',\n      title: 'ID',\n      type: 'string',\n      description:\n        'A lowercase single word identifier for this field, usually just the label in lowercase label will suffice. For example: \"First name\" might have an ID of \"first\"'\n    },\n    {\n      name: 'required',\n      title: 'Required field',\n      type: 'boolean',\n      description: 'Does this form field require a value?'\n    },\n    {\n      name: 'input',\n      title: 'Input Type',\n      type: 'string',\n      options: {\n        list: [\n          'text',\n          'email',\n          'telephone',\n          'date',\n          'textarea',\n          'select',\n          'checkbox',\n          'radio',\n          'url',\n          'file',\n          'number'\n        ],\n        layout: 'dropdown'\n      }\n    },\n    {\n      name: 'values',\n      title: 'Input Values',\n      description:\n        'If you selected Select, Checkbox, or Radio above, please create values to be available for that input type in the field below',\n      type: 'array',\n      of: [{type: 'string'}],\n      layout: 'tags'\n    },\n    {\n      name: 'initialValue',\n      title: 'Initial Value',\n      type: 'string',\n      description:\n        'Input a string which matches the value of your chosen value above to set as an initial value on this field.'\n    },\n    {\n      name: 'placeholder',\n      title: 'Placeholder',\n      description:\n        'A placeholder that will sit inside the input component until the user begins to type (only works for text/number fields)',\n      type: 'string'\n    },\n    {\n      name: 'validation',\n      title: 'Validation',\n      type: 'object',\n      options: {\n        collapsible: true,\n        collapsed: true\n      },\n      fields: [\n        {\n          type: 'string',\n          name: 'validationType',\n          title: 'Validation type',\n          options: {\n            list: [\n              {title: 'None', value: 'none'},\n              {title: 'Default', value: 'default'},\n              {title: 'Custom', value: 'custom'}\n            ],\n            layout: 'radio',\n            direction: 'horizontal'\n          },\n          description:\n            \"Choose whether you use no validation, the default validation, or a custom regex for validating this field. If you're unsure, just use default validation.\"\n        },\n        {type: 'string', name: 'regexString', title: 'Regex String'},\n        {\n          type: 'string',\n          name: 'warning',\n          title: 'Warning text',\n          description:\n            'Input a warning that helpfully describes what your field expects'\n        }\n      ]\n    },\n\n    {\n      title: 'Styling',\n      name: 'styling',\n      type: 'object',\n      options: {\n        collapsible: true,\n        collapsed: true\n      },\n      fields: [\n        {\n          title: 'Full width',\n          name: 'fullWidth',\n          type: 'boolean'\n        },\n        {\n          title: 'Group border',\n          name: 'border',\n          type: 'boolean'\n        }\n      ]\n    }\n  ],\n  initialValue: {\n    required: false,\n    validation: {\n      validationType: 'none'\n    }\n  }\n};\n","export default {\n  name: 'formarrayfield',\n  title: 'Sub-form Object',\n  type: 'document',\n  fields: [\n    {\n      // This (along with it's initialValue) is necessary for rendering the formarrayfield on the front end.\n      name: 'input',\n      title: 'Input',\n      type: 'string',\n      hidden: true\n    },\n    {\n      name: 'label',\n      title: 'Label',\n      type: 'string',\n      description:\n        'The label which will accompany this form input on the screen'\n    },\n    {\n      name: 'description',\n      title: 'Form description',\n      type: 'blockContent'\n    },\n    {\n      name: 'id',\n      title: 'ID',\n      type: 'string',\n      description:\n        'A lowercase single word identifier for this field, usually just the label in lowercase label will suffice. For example: \"First name\" might have an ID of \"first\"'\n    },\n    {\n      name: 'required',\n      title: 'Required field',\n      type: 'boolean',\n      description: 'Does this form field require a value?'\n    },\n    {\n      name: 'childLabel',\n      title: 'Child label',\n      description:\n        \"The label appended to each input array (along with it's index) e.g. Customer 1/2/3 [etc.]\",\n      type: 'string'\n    },\n    {\n      name: 'childFields',\n      title: 'Fields',\n      type: 'array',\n      of: [\n        {\n          type: 'formfield'\n        }\n      ]\n    }\n  ],\n  initialValue: {\n    input: 'field-array'\n  }\n};\n"],"names":["Error","name","useField","subscription","touched","error","meta","propTypes","PropTypes","string","isRequired","handleReset","e","form","preventDefault","reset","NestedForm","childFields","childLabel","fields","index","gridColumn","display","map","field","getFormField","remove","array","any","number","blockText","mutators","push","pop","width","styling","fullWidth","input","id","placeholder","otherProps","label","description","justifyContent","undefined","values","value","boxSizing","minWidth","margin","length","required","FormComponent","title","submitForm","validationFn","arrayMutators","handleSubmit","submitting","pristine","reduce","obj","initialValue","func","text","email","telephone","date","textarea","select","checkbox","radio","url","file","validation","data","regexs","regexDict","regexLookup","errorMessage","requiredError","errors","forEach","rg","regexString","suppliedRegex","RegExp","vtype","validationType","regex","test","warning","console","log","type","of","options","list","layout","collapsible","collapsed","direction","hidden"],"mappings":"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"}