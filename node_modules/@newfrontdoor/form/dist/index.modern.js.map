{"version":3,"file":"index.modern.js","sources":["../src/form.js","../src/regex-lookup.js","../src/validation.js"],"sourcesContent":["/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport React from 'react'; // eslint-disable-line no-unused-vars\nimport {Form, Field, useField} from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport {FieldArray} from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\nimport {\n  Label,\n  Textarea,\n  Input,\n  Checkbox,\n  Button,\n  Radio,\n  Select,\n  Grid,\n  Box,\n  Styled,\n  Text,\n  jsx\n} from 'theme-ui';\n\nconst Error = ({name}) => {\n  const {\n    meta: {touched, error}\n  } = useField(name, {subscription: {touched: true, error: true}});\n  return touched && error ? (\n    <Text variant=\"warning\" mb={2}>\n      {error}\n    </Text>\n  ) : null;\n};\n\nError.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst handleReset = (event, form) => {\n  event.preventDefault();\n  form.reset();\n};\n\nconst NestedForm = ({childFields, form, childLabel, name, fields, index}) => {\n  return (\n    <div key={name} sx={{gridColumn: '1/3'}}>\n      <fieldset sx={{display: 'contents'}}>\n        {childLabel && (\n          <Styled.h4>\n            {childLabel} {index + 1}\n          </Styled.h4>\n        )}\n        {childFields.map((field) => {\n          return getFormField(field, form, name);\n        })}\n        <Button type=\"button\" onClick={() => fields.remove(index)}>\n          Remove\n        </Button>\n      </fieldset>\n    </div>\n  );\n};\n\nNestedForm.propTypes = {\n  childFields: PropTypes.array.isRequired,\n  form: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  childLabel: PropTypes.string,\n  fields: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nconst getFormField = (field, form, blockText, name = '') => {\n  const {push, pop} = form.mutators;\n  const width = field.styling && field.styling.fullWidth ? '1/3' : null;\n  // This is a hack while Sanity doesn't enable initial values on array-level items\n  if (field.childFields) field.input = 'field-array';\n\n  switch (field.input) {\n    case 'textarea':\n      return (\n        <Field\n          key={field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: '1/3'}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Textarea id={field.id} {...input} {...otherProps} rows=\"8\" />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'field-array':\n      return (\n        <Box sx={{gridColumn: '1/3'}}>\n          {field.label && <Styled.h2>{field.label}</Styled.h2>}\n          {field.description && blockText ? (\n            blockText(field.description)\n          ) : (\n            <Styled.p>{field.description}</Styled.p>\n          )}\n          <Grid gap={20} columns={['1fr 1fr']}>\n            <div sx={{display: 'flex', justifyContent: 'space-evenly'}}>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => push(name + field.id, undefined)}\n              >\n                Add\n              </Button>\n              <Button\n                type=\"button\"\n                sx={{width: '35%'}}\n                onClick={() => pop(name + field.id, undefined)}\n              >\n                Remove\n              </Button>\n            </div>\n            <FieldArray name={name + field.id}>\n              {({fields}) =>\n                fields.map((name, index) => (\n                  <NestedForm\n                    key={name + field.id}\n                    childLabel={field.childLabel}\n                    name={name}\n                    form={form}\n                    fields={fields}\n                    index={index}\n                    childFields={field.childFields}\n                  />\n                ))\n              }\n            </FieldArray>\n          </Grid>\n        </Box>\n      );\n    case 'select':\n      return (\n        <Field key={field.id} name={name + field.id}>\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id}>{field.label}</Label>\n              <Select id={field.id} {...input} {...otherProps}>\n                {field.values.map((value) => (\n                  <option key={field.id + value} value={value}>\n                    {value}\n                  </option>\n                ))}\n              </Select>\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n    case 'radio':\n      return (\n        <fieldset key={field.id} sx={{gridColumn: width}}>\n          <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n          {field.values.map((value) => (\n            <div key={field.id + value}>\n              <label\n                key={value}\n                sx={{\n                  boxSizing: 'border-box',\n                  minWidth: '0px',\n                  width: '100%',\n                  display: 'flex',\n                  margin: '0px'\n                }}\n              >\n                <Field name={name + field.id} type=\"radio\" value={value}>\n                  {({input, ...otherProps}) => (\n                    <Radio {...input} {...otherProps} />\n                  )}\n                </Field>\n                {value}\n              </label>\n            </div>\n          ))}\n        </fieldset>\n      );\n    case 'checkbox':\n      return (\n        <React.Fragment>\n          {field.label && field.values && field.values.length > 0 ? (\n            <fieldset key={field.id} sx={{gridColumn: width}}>\n              <legend sx={{gridColumn: '1/3'}}>{field.label}</legend>\n              {field.values.map((value) => (\n                <div key={field.id + value}>\n                  <label\n                    key={value}\n                    sx={{\n                      boxSizing: 'border-box',\n                      minWidth: '0px',\n                      width: '100%',\n                      display: 'flex',\n                      margin: '0px'\n                    }}\n                  >\n                    <Field name={name + field.id} value={value}>\n                      {({input, ...otherProps}) => (\n                        <Checkbox {...input} {...otherProps} />\n                      )}\n                    </Field>\n                    {value}\n                  </label>\n                </div>\n              ))}\n            </fieldset>\n          ) : (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label sx={{display: 'inline-block'}}>\n                <Field key={field.id} name={name + field.id}>\n                  {({input, ...otherProps}) => (\n                    <Checkbox {...input} {...otherProps} />\n                  )}\n                </Field>\n                {field.label}\n                <Error name={name + field.id} />\n              </Label>\n            </div>\n          )}\n        </React.Fragment>\n      );\n    case 'reset':\n      return (\n        <Button\n          sx={{gridColumn: width}}\n          type={field.input}\n          id={field.id}\n          onClick={(event) => handleReset(event, form)}\n        >\n          {field.label}\n        </Button>\n      );\n    default:\n      return (\n        <Field\n          key={name + field.id}\n          name={name + field.id}\n          placeholder={field.placeholder}\n        >\n          {({input, ...otherProps}) => (\n            <div key={field.id + field.label} sx={{gridColumn: width}}>\n              <Label htmlFor={field.id} required={field.required}>\n                {field.label}\n                {field.required && <strong>*</strong>}\n              </Label>\n              <Input\n                type={field.input}\n                id={field.id}\n                {...input}\n                {...otherProps}\n              />\n              <Error name={name + field.id} />\n            </div>\n          )}\n        </Field>\n      );\n  }\n};\n\nconst FormComponent = ({\n  title,\n  id,\n  description,\n  fields,\n  blockText,\n  submitForm,\n  validationFn,\n  success\n}) => {\n  const defaultTextHandler = (content) => {\n    return <Styled.p>{content}</Styled.p>;\n  };\n\n  const block = blockText || defaultTextHandler;\n\n  return (\n    <Form\n      mutators={{\n        ...arrayMutators\n      }}\n      render={({handleSubmit, form, submitting, pristine, submitSucceeded}) => {\n        return submitSucceeded ? (\n          success ? (\n            success\n          ) : (\n            <Box as=\"form\" id={id}>\n              <fieldset>\n                <Styled.p>\n                  Thankyou for your submission. We will get back to you as soon\n                  as we can.\n                </Styled.p>\n              </fieldset>\n            </Box>\n          )\n        ) : (\n          <Box as=\"form\" id={id} onSubmit={handleSubmit}>\n            <fieldset>\n              {title && <Styled.h2>{title}</Styled.h2>}\n              {description && block(description)}\n              <Grid gap={20} columns={['1fr 1fr']}>\n                {fields.map((field) => {\n                  return getFormField(field, form, block);\n                })}\n                <Button\n                  sx={{gridColumn: '1/3'}}\n                  type=\"submit\"\n                  disabled={submitting || pristine}\n                >\n                  Submit\n                </Button>\n              </Grid>\n            </fieldset>\n          </Box>\n        );\n      }}\n      validate={validationFn}\n      initialValues={fields.reduce((object, field) => {\n        if (field.initialValue) object[field.id] = field.initialValue;\n        return object;\n      }, {})}\n      onSubmit={submitForm}\n    />\n  );\n};\n\nFormComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n  blockText: PropTypes.func,\n  submitForm: PropTypes.func.isRequired,\n  validationFn: PropTypes.func,\n  success: PropTypes.node\n};\n\nexport default FormComponent;\nexport {getFormField};\n","export default {\n  text: null,\n  email: /([\\w_.\\-+])+@([\\w-]+\\.)+([\\w]{2,10})+$/i,\n  telephone: /^[+]*[(]{0,1}[0-9]{2,}[)]{0,1}[0-9]{6,}$/i,\n  date: /^(0?[1-9]|1[0-2])[/](0?[1-9]|[12]d|3[01])[/](14|21)d{2}$/i,\n  textarea: null,\n  select: null,\n  checkbox: null,\n  radio: null,\n  url: /[(http(s)?)://(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/i,\n  file: null,\n  number: /^-?\\d*\\.?\\d+$/i\n};\n","import regexLookup from './regex-lookup';\n\nconst validation = (values, data, regexs) => {\n  // If a new Regex object is supplied, use that, otherwise, use the library default\n  const regexDict = regexs || regexLookup;\n\n  // If an error message is supplied, use that, otherwise, use the library default\n  const errorMessage = data.requiredError || 'Required';\n\n  // Define errors object\n  const errors = {};\n\n  // Begin testing each field for errors\n  data.fields.forEach(field => {\n    /* ***** */\n    /* Setup */\n    /* ***** */\n\n    // If supplied regex, put it into variable - otherwise false\n    const rg = field?.validation?.regexString;\n\n    // Test the supplied regex, return if regex, or make regex, or return false\n    const suppliedRegex =\n      rg instanceof RegExp\n        ? rg\n        : rg && new RegExp(rg) instanceof RegExp // If rg && not included, this would evaluate true\n        ? new RegExp(rg)\n        : false;\n\n    // If supplied validation type, put it into variable - otherwise false\n    const vtype = field?.validation?.validationType ?? false;\n\n    // Set the regex based on vtype and suppliedRegex value\n    const regex =\n      vtype === 'custom'\n        ? suppliedRegex\n        : vtype === 'default'\n        ? regexDict[field.input]\n        : false;\n\n    /* ***** */\n    /* Tests */\n    /* ***** */\n\n    // Test for value against required, if met, test against regex (if applicable)\n    if (field.required) {\n      if (!values[field.id]) {\n        errors[field.id] = errorMessage;\n      } else if (regex && !regex.test(values[field.id])) {\n        errors[field.id] = field.validation.warning;\n      }\n    }\n\n    // Given value not required, if value, test against regex (if valid regex)\n    if (!field.required) {\n      if (regex && values[field.id] && !regex.test(values[field.id])) {\n        console.log('inside');\n        errors[field.id] = field.validation.warning;\n      }\n    }\n  });\n\n  // Returns error object as result of validation to react-final-form\n  return errors;\n};\n\nexport default validation;\n"],"names":["Error","name","meta","touched","error","useField","subscription","propTypes","PropTypes","string","isRequired","handleReset","event","form","preventDefault","reset","NestedForm","childFields","childLabel","fields","index","gridColumn","display","map","field","getFormField","remove","array","any","number","blockText","push","pop","mutators","width","styling","fullWidth","input","id","placeholder","otherProps","label","description","justifyContent","undefined","values","value","boxSizing","minWidth","margin","length","required","FormComponent","title","submitForm","validationFn","success","defaultTextHandler","content","block","arrayMutators","handleSubmit","submitting","pristine","submitSucceeded","reduce","object","initialValue","func","node","text","email","telephone","date","textarea","select","checkbox","radio","url","file","validation","data","regexs","regexDict","regexLookup","errorMessage","requiredError","errors","forEach","rg","regexString","suppliedRegex","RegExp","vtype","validationType","regex","test","warning","console","log"],"mappings":"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"}